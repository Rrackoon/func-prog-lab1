stages:
  - build
  - check
  - test

build-image:
  stage: build
  image: alpine:latest
  before_script:
    - apk update && apk add --no-cache bash curl git build-base
    - curl -sSL https://github.com/elixir-lang/elixir/releases/download/v1.16.0/elixir-otp-26.tar.gz | tar -xz
    - mv elixir-1.16.0 /usr/local/elixir
    - export PATH="/usr/local/elixir/bin:$PATH"
    - elixir --version
  script:
    - echo "Образ собран прямо внутри job"
  artifacts:
    paths:
      - .
    expire_in: 1h

format:
  stage: check
  image: alpine:latest
  before_script:
    - apk update && apk add --no-cache bash curl git build-base
    - curl -sSL https://github.com/elixir-lang/elixir/releases/download/v1.16.0/elixir-otp-26.tar.gz | tar -xz
    - mv elixir-1.16.0 /usr/local/elixir
    - export PATH="/usr/local/elixir/bin:$PATH"
    - mix local.hex --force
    - mix local.rebar --force
  script:
    - mix deps.get
    - mix format --check-formatted

lint:
  stage: check
  image: alpine:latest
  before_script:
    - apk update && apk add --no-cache bash curl git build-base
    - curl -sSL https://github.com/elixir-lang/elixir/releases/download/v1.16.0/elixir-otp-26.tar.gz | tar -xz
    - mv elixir-1.16.0 /usr/local/elixir
    - export PATH="/usr/local/elixir/bin:$PATH"
    - mix local.hex --force
    - mix local.rebar --force
  script:
    - mix deps.get
    - mix credo --strict

test:
  stage: test
  image: alpine:latest
  before_script:
    - apk update && apk add --no-cache bash curl git build-base
    - curl -sSL https://github.com/elixir-lang/elixir/releases/download/v1.16.0/elixir-otp-26.tar.gz | tar -xz
    - mv elixir-1.16.0 /usr/local/elixir
    - export PATH="/usr/local/elixir/bin:$PATH"
    - mix local.hex --force
    - mix local.rebar --force
  script:
    - mix deps.get
    - mix test

variables:
  DOCKER_PULL_POLICY: "if-not-present"
  FF_USE_FASTZIP: "true"